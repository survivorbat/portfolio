parameters:
  - name: backendType
    type: string
  - name: backendServiceArm
    type: string
  - name: backendAzureRmResourceGroupName
    type: string
  - name: backendAzureRmStorageAccountName
    type: string
  - name: backendAzureRmContainerName
    type: string
  - name: backendAzureRmKey
    type: string
  - name: terraformDirectory
    type: string
  - name: environmentServiceName
    type: string
  - name: apply
    type: bool
    default: false

steps:
  - task: TerraformCLI@0
    inputs:
      command: 'init'
      backendType: ${{ parameters.backendType }}
      backendServiceArm: ${{ parameters.backendServiceArm }}
      backendAzureRmResourceGroupName: ${{ parameters.backendAzureRmResourceGroupName }}
      backendAzureRmStorageAccountName: ${{ parameters.backendAzureRmStorageAccountName }}
      backendAzureRmContainerName: ${{ parameters.backendAzureRmContainerName }}
      backendAzureRmKey: ${{ parameters.backendAzureRmKey }}
      commandOptions: ${{ parameters.terraformDirectory }}
    displayName: Init ${{ parameters.terraformDirectory }}

  - task: TerraformCLI@0
    inputs:
      command: 'validate'
      commandOptions: ${{ parameters.terraformDirectory }}
    displayName: Validate ${{ parameters.terraformDirectory }}

  - task: TerraformCLI@0
    inputs:
      command: 'plan'
      environmentServiceName: ${{ parameters.environmentServiceName }}
      commandOptions: ${{ parameters.terraformDirectory }}
    displayName: Plan ${{ parameters.terraformDirectory }}

  - task: TerraformCLI@0
    condition: ${{ parameters.apply }}
    inputs:
      command: 'apply'
      environmentServiceName: ${{ parameters.environmentServiceName }}
      commandOptions: ${{ parameters.terraformDirectory }}
    displayName: Apply ${{ parameters.terraformDirectory }}
