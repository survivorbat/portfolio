trigger:
  paths:
    include:
      - .dockerignore
      - azure-pipelines.yaml
      - pipeline-templates
      - src
      - common
  branches:
    include:
      - master
      - develop
      - feature/*

variables:
  sourceDirectory: "$(Build.SourcesDirectory)/src/frontend"

  repository: survivorbat/portfolio
  serviceConnection: DockerHub
  tag: nginx-$(Build.SourceBranchName)-$(Build.BuildNumber)

  node_version: "13.7.0"
  nginx_jinja_version: "1.17.9"

stages:
  - stage: Build_and_Test
    displayName: Build and test
    jobs:
      - job: Build
        displayName: Build and test
        steps:
          - task: Docker@2
            displayName: Build
            inputs:
              command: build
              repository: $(repository)
              arguments: --build-arg node_version=$(node_version) --build-arg nginx_jinja_version=$(nginx_jinja_version)
              tags: |
                $(tag)
                latest
  - stage: Deploy
    displayName: Deploy
    condition: and(succeeded(), eq(variables['build.sourcebranchname'], 'master'))
    jobs:
      - job: Docker_Publish
        displayName: Build and test
        steps:
          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: $(serviceConnection)
          - task: Docker@2
            displayName: Build
            inputs:
              command: build
              repository: $(repository)
              containerRegistry: $(serviceConnection)
              arguments: --build-arg node_version=$(node_version) --build-arg nginx_jinja_version=$(nginx_jinja_version)
              tags: |
                $(tag)
                latest
          - task: Docker@2
            displayName: Publish
            inputs:
              command: push
              repository: $(repository)
              containerRegistry: $(serviceConnection)
              tags: |
                $(tag)
                latest
      - job: Infra_Deploy
        displayName: Terraform Deploy
        depends_on: Docker_Publish
        steps:
          - task: qetza.replacetokens.replacetokens-task.replacetokens@3
            displayName: 'Replace tokens in terraform/*.tf'
            inputs:
              targetFiles: 'common/terraform/*.tf'
              tokenPrefix: '__'
              tokenSuffix: '__'

          - template: pipeline-templates/terraform-deploy.yaml
            parameters:
              rootDirectory: "$(Build.SourcesDirectory)/common/terraform"

      - job: Infra_Configure
        displayName: Ansible
        depends_on: Infra_Deploy
        steps:
          - template: pipeline-templates/ansible-deploy.yaml
            parameters:
              rootDirectory: "$(Build.SourcesDirectory)/common/ansible"
              ansibleEnvironment:
                doToken: $(doToken)


