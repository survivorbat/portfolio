trigger:
  paths:
    include:
      - .dockerignore
      - azure-pipelines.yaml
      - pipeline-templates
      - src
      - common
  branches:
    include:
      - master
      - develop
      - feature/*

variables:
  sourceDirectory: "$(Build.SourcesDirectory)/src/frontend"

  repository: survivorbat/portfolio
  dockerServiceConnection: DockerHub
  azureServiceConnection: ARM
  terraformDirectory: $(Build.SourcesDirectory)/common/terraform
  tag: nginx-$(Build.SourceBranchName)-$(Build.BuildNumber)
  privateKeyName: azure_rsa
  resourceGroupName: Portfolio

  #  doToken: "<secret>" <--- This secret variable is defined in the Azure DevOps UI
  #  doAccessKey: "<secret>" <--- This secret variable is defined in the Azure DevOps UI
  #  doSecretKey: "<secret>" <--- This secret variable is defined in the Azure DevOps UI

  nginx_jinja_version: "1.17.9"

# TODO: Cleanup this mess
stages:
  - stage: Build_and_Test
    displayName: Build and test
    jobs:
      - job: Build
        displayName: Build and test
        steps:
          - task: Docker@2
            displayName: Build
            inputs:
              command: build
              repository: $(repository)
              arguments: --build-arg nginx_jinja_version=$(nginx_jinja_version)
              tags: |
                $(tag)
                latest
      - job: TFValidate
        displayName: Validate Terraform Config
        steps:
          - task: qetza.replacetokens.replacetokens-task.replacetokens@3
            displayName: 'Replace tokens in common/terraform/*.tf'
            inputs:
              targetFiles: 'common/terraform/*.tf'
              tokenPrefix: '__'
              tokenSuffix: '__'

          - task: TerraformCLI@0
            inputs:
              command: 'init'
              commandOptions: $(terraformDirectory)
            displayName: Init $(terraformDirectory)

          - task: TerraformCLI@0
            inputs:
              command: 'validate'
              commandOptions: $(terraformDirectory)
            displayName: Validate $(terraformDirectory)

  - stage: Deploy
    displayName: Deploy
    condition: and(succeeded(), eq(variables['build.sourcebranchname'], 'master'))
    jobs:
      - job: Docker_Publish
        displayName: Publish Docker Image
        steps:
          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: $(dockerServiceConnection)

          - task: Docker@2
            displayName: Build
            inputs:
              command: build
              repository: $(repository)
              containerRegistry: $(dockerServiceConnection)
              arguments: --build-arg node_version=$(node_version) --build-arg nginx_jinja_version=$(nginx_jinja_version)
              tags: |
                $(tag)
                latest

          - task: Docker@2
            displayName: Publish
            inputs:
              command: push
              repository: $(repository)
              containerRegistry: $(dockerServiceConnection)
              tags: |
                $(tag)
                latest
      - job: Infra_Deploy
        displayName: Terraform Deploy
        dependsOn: Docker_Publish
        steps:
          - task: qetza.replacetokens.replacetokens-task.replacetokens@3
            displayName: 'Replace tokens in common/terraform/*.tf'
            inputs:
              targetFiles: 'common/terraform/*.tf'
              tokenPrefix: '__'
              tokenSuffix: '__'

          - task: TerraformCLI@0
            inputs:
              command: 'init'
              commandOptions: $(terraformDirectory)
            displayName: Init $(terraformDirectory)

          - task: TerraformCLI@0
            inputs:
              command: 'apply'
              commandOptions: $(terraformDirectory)
            displayName: Apply $(terraformDirectory)

          - template: pipeline-templates/ansible-deploy.yaml
            parameters:
              rootDirectory: "$(Build.SourcesDirectory)/common/ansible"
              inventoryFileName: "inventories/prod.yaml"
              ansibleEnvironment:
                doToken: $(doToken)
                letsencryptEmail: $(letsencryptEmail)
                personalPublicKey: $(personalPublicKey)
                portfolioPublicKey: $(portfolioPublicKey)
                nginxImage: $(repository):$(tag)
                ansible_python_interpreter: python3
                acmeKeyPath: $(Build.SourcesDirectory)/key.pem
                acmeFullchainPath: $(Build.SourcesDirectory)/fullchain.pem
              privateKeyName: $(privateKeyName)