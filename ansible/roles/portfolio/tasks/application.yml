---
- name: "Clean {{ project_dir }}"
  file:
    path: "{{ project_dir }}"
    state: absent

- name: "Ensure {{ project_dir }}"
  file:
    state: directory
    path: "{{ project_dir }}"
    owner: "{{ default_user }}"
    group: "{{ default_group }}"
    mode: 0755

- name: "Ensure files in {{ project_dir }}"
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ default_user }}"
    group: "{{ default_group }}"
    mode: 0755
  loop: "{{ project_dir_files }}"

- name: "Ensure docker login"
  docker_login:
    username: "{{ docker_username }}"
    email: "{{ docker_email }}"
    password: "{{ docker_password }}"

- name: "Ensure {{ docker_secrets_directory }} folder exists"
  file:
    state: directory
    path: "{{ docker_secrets_directory }}"
    owner: "{{ default_user }}"
    group: "{{ default_group }}"
    mode: '550'

- name: "Ensure vault secrets are in secret folder"
  copy:
    dest: "{{ docker_secrets_directory }}/{{ item.key }}"
    content: "{{ item.value }}"
    #    owner: "{{ default_user }}"
    owner: "999" # TODO: Fix this, mysql won't have permission tho these otherwise
    group: "{{ default_group }}"
    mode: '550'
  no_log: true
  loop: "{{ lookup('dict', docker_secrets) }}"

- name: "Restart Docker containers from {{ project_name }} with files in {{ project_dir }} with tag {{ docker_tag }}"
  environment:
    server_name: "{{ inventory_hostname }}"
    docker_tag: "{{ docker_tag }}"
    secrets_folder: "{{ docker_secrets_directory }}"
  docker_compose:
    state: present
    restarted: yes
    project_name: "{{ project_name }}"
    project_src: "{{ project_dir }}"
    files:
      - "docker-compose.yml"
      - "docker-compose.prod.yml"