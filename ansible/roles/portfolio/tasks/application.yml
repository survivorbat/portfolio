---
- name: "Clean {{ project_dir }}"
  file:
    path: "{{ project_dir }}"
    state: absent

- name: "Ensure {{ project_dir }}"
  file:
    state: directory
    path: "{{ project_dir }}"
    owner: "{{ default_user }}"
    group: "{{ default_group }}"
    mode: 0755

- name: "Ensure files in {{ project_dir }}"
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ default_user }}"
    group: "{{ default_group }}"
    mode: 0755
  with_items: "{{ project_dir_files }}"

- name: "Ensure static files in {{ nginx_static_dir }}"
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ default_user }}"
    group: "{{ default_group }}"
    mode: 0755
  with_items: "{{ nginx_static_files }}"

- name: "Ensure docker login"
  docker_login:
    username: "{{ docker_username }}"
    email: "{{ docker_email }}"
    password: "{{ docker_password }}"

- name: "Restart Docker containers from {{ project_name }} with files in {{ project_dir }} with tag {{ docker_tag }}"
  environment:
    server_name: "{{ inventory_hostname }}"
    docker_tag: "{{ docker_tag }}"
    secrets_folder: "{{ docker_secrets_directory }}"
  docker_service:
    state: present
    restarted: yes
    project_name: "{{ project_name }}"
    project_src: "{{ project_dir }}"
    files:
      - "docker-compose.yml"
      - "docker-compose.prod.yml"